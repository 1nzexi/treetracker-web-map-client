openapi: 3.0.0
info:
  title: web map api
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/trees/{treeId}':
    parameters:
      - schema:
          type: string
        name: treeId
        in: path
        required: true
    get:
      summary: get tree info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json: null
          example:
            value:
              name: China
      operationId: get-trees-treeId
      description: ''
  /trees:
    parameters: []
    get:
      summary: get tree list by query parameters
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json: null
          example:
            value:
              name: China
        '':
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: total count of trees satifiying the query condition
                  trees:
                    type: array
                    items:
                      $ref: '#/components/schemas/tree'
                  offset:
                    type: integer
                  limit:
                    type: integer
      operationId: get-trees-treeId
      description: 'query trees by filters like trees belongs to a planter, also consider pagination'
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
          description: 'The start offset of the list, if missing, default is 0'
        - schema:
            type: integer
            minimum: -15
            maximum: 1000
          in: query
          name: limit
          description: 'The limit length of the return list, if missing, default is 20'
        - schema:
            type: integer
          in: query
          name: planter_id
          description: Filter by planter id
        - schema:
            type: integer
          in: query
          name: organization_id
          description: Filter by org id
        - schema:
            type: string
          in: query
  /trees/featured:
    get:
      summary: get featured tree list
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    total: 1
                    trees: []
                properties:
                  total:
                    type: number
                  trees:
                    type: array
                    items:
                      $ref: '#/components/schemas/tree'
                required:
                  - total
                  - trees
              examples: {}
      operationId: get-trees-featured
      description: 'this is some good trees bookmarked by admin, short time we will consider use a static table/file to pick up and store these tree id somewhere.'
  /countries/leader:
    get:
      summary: leader board of country
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    total: 1
                    countries: []
                properties:
                  total:
                    type: number
                  countries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                        count:
                          type: integer
                          description: the count of planted tree in this country
                required:
                  - total
                  - countries
      operationId: get-countries-leader
      description: |-
        a board of leader country, we will query the DB with SQL like this:
        ```
        SELECT
          count(trees.*),region.name
        FROM
          trees
        RIGHT JOIN region ON 
        st_contains(region.geom,trees.estimated_geometric_location)
        where region.type_id = 10
        group by region.name;
        ```

        But it's slow so we consider pre-query the db and store the result somewhere.
  /countries:
    get:
      summary: get countries
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    total: 1
                    countries: []
                properties:
                  total:
                    type: number
                    description: total result of countries
                  countries:
                    type: array
                    items:
                      $ref: '#/components/schemas/country'
                required:
                  - total
                  - countries
      operationId: get-countries-leader
      description: |-
        get country by query, if given the 'lat' and 'lon', we can query db by SQL: 
        ```
        SELECT region.* FROM region, region_type
        WHERE region.type_id = region_type.id
        AND ST_Contains(region.geom, ST_GeomFromText('POINT (-13.215865333333333 8.34645033333333)',4326)) 
        AND  region_type.id = region.type_id AND region_type.type = 'country'
        ```
        To get the country from the `region` table. 
      parameters:
        - schema:
            type: number
          in: query
          name: lat
          description: the latitude of the location
        - schema:
            type: number
          in: query
          name: lon
          description: the longitude of the location
    parameters: []
  '/countries/{countryId}':
    get:
      summary: get one country
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    total: 1
                    countries: []
                properties:
                  total:
                    type: number
                    description: total result of countries
                  countries:
                    type: array
                    items:
                      $ref: '#/components/schemas/country'
                required:
                  - total
                  - countries
        '':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/country'
      operationId: get-countries-leader
      description: |-
        get country by query, if given the 'lat' and 'lon', we can query db by SQL: 
        ```
        SELECT region.* FROM region, region_type
        WHERE region.type_id = region_type.id
        AND ST_Contains(region.geom, ST_GeomFromText('POINT (-13.215865333333333 8.34645033333333)',4326)) 
        AND  region_type.id = region.type_id AND region_type.type = 'country'
        ```
        To get the country from the `region` table. 
      parameters:
        - schema:
            type: number
          in: query
          name: lat
          description: the latitude of the location
        - schema:
            type: number
          in: query
          name: lon
          description: the longitude of the location
    parameters:
      - schema:
          type: string
        name: countryId
        in: path
        required: true
  '/planters/{planterId}':
    parameters:
      - schema:
          type: string
        name: planterId
        in: path
        required: true
    get:
      summary: get planter info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/planter'
      operationId: get-planters-planterId
  '/organizations/{orgId}':
    parameters:
      - schema:
          type: string
        name: orgId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
      operationId: get-organizations-orgId
  '/organizations/{orgId}/planters/summary':
    parameters:
      - schema:
          type: string
        name: orgId
        in: path
        required: true
    get:
      summary: Get the summary info of a planter under a org
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  total:
                    type: number
                required:
                  - total
                x-examples:
                  example-1:
                    total: 100
              examples:
                example-summary:
                  total: 100
      operationId: get-organizations-orgId-planters-sumarry
  '/organizations/{orgId}/trees/summary':
    parameters:
      - schema:
          type: string
        name: orgId
        in: path
        required: true
    get:
      summary: get trees summary info under a org
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  total:
                    type: number
                required:
                  - total
                x-examples:
                  example-1:
                    total: 1000000
              examples:
                example-summary:
                  total: 0
      operationId: get-organizations-orgId-trees-summary
      description: ''
  /mock/trees/query/planter_id=940&limit=4:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                trees:
                  value:
                    total: 20
                    trees:
                      - $ref: examples/trees/186734.json
                      - $ref: examples/trees/186735.json
                      - $ref: examples/trees/186736.json
                      - $ref: examples/trees/186737.json
  /mock/trees/query/organization_id=1&limit=4:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                trees:
                  value:
                    total: 200
                    trees:
                      - $ref: examples/trees/186734.json
                      - $ref: examples/trees/186735.json
                      - $ref: examples/trees/186736.json
                      - $ref: examples/trees/186737.json
  /mock/trees/933042:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                a-tree:
                  $ref: '#/components/examples/tree933042'
  /mock/trees/932946:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                a-tree:
                  $ref: '#/components/examples/tree932946'
  /mock/trees/186734:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/trees/186734.json
  /mock/trees/186735:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/trees/186735.json
  /mock/trees/186736:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/trees/186736.json
  /mock/trees/186737:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/trees/186737.json
  /mock/trees/featured:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                trees:
                  value:
                    trees:
                      - $ref: examples/trees/186734.json
                      - $ref: examples/trees/186735.json
                      - $ref: examples/trees/186736.json
                      - $ref: examples/trees/186737.json
  /mock/countries/leader:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/countries/leader.json
  /mock/countries/6632544:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/countries/6632544.json
  /mock/countries/6632386:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/countries/6632386.json
  /mock/countries/6632375:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/countries/6632375.json
  /mock/countries/6632357:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/countries/6632357.json
  /mock/planters/5:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                a-planter:
                  $ref: '#/components/examples/planter5'
  /mock/planters/940:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/planters/940.json
  /mock/planters/940/trees:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/planters/940/trees.json
  /mock/planters/940/organizations:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/planters/940/organizations.json
  /mock/planters/query/organization_id=1&limit=4:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                organizations:
                  value:
                    total: 20
                    planters:
                      - $ref: examples/planters/940.json
  /mock/organizations/query/planter_id=940:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                organizations:
                  value:
                    total: 2
                    organizations:
                      - $ref: examples/organizations/1.json
  /mock/organizations/1:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/organizations/1.json
  /mock/species/query/planter_id=940:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                species:
                  value:
                    total: 2
                    species:
                      - $ref: examples/species/1.json
                      - $ref: examples/species/2.json
  /mock/species/query/organization_id=1:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                species:
                  value:
                    total: 20
                    species:
                      - $ref: examples/species/1.json
                      - $ref: examples/species/2.json
  /mock/transactions/query/token=1:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                transactions:
                  value:
                    total: 3
                    transactions:
                      - $ref: examples/transactions/1.json
                      - $ref: examples/transactions/2.json
  /mock/tokens/query/wallet=180Earth&withPlanter=true&withCapture=true:
    get:
      responses:
        '200':
          content:
            application/json:
              examples:
                tokens:
                  value:
                    total: 1
                    tokens:
                      - $ref: examples/tokens/1.json
                      - $ref: examples/tokens/2.json
                      - $ref: examples/tokens/3.json
                      - $ref: examples/tokens/4.json
  /mock/tokens/1:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/tokens/1.json
  /mock/tokens/2:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/tokens/2.json
  /mock/tokens/3:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/tokens/3.json
  /mock/tokens/4:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/tokens/4.json
  /mock/wallets/180Earth:
    get:
      responses:
        '200':
          content:
            application/json:
              example:
                $ref: examples/wallets/180Earth.json
components:
  schemas:
    tree:
      description: a single tree object
      type: object
      x-examples:
        example-tree:
          id: 933042
          photo_url: 'https://treetracker-production-images.s3.eu-central-1.amazonaws.com/2021.05.19.09.49.19_-4.881696978000001_38.37997515399998_47fc629b-27e9-4b58-b31a-3a35e5bbc3f0_IMG_20210518_121452_1024002290.jpg'
          verified: true
          token_id: d4bb294b-8c75-4e0f-af43-1cd9a35e1033
          impact_manager_id: 8599f832-145e-11ec-82a8-0242ac130003
          impact_producer_id: a0b6b70e-145e-11ec-82a8-0242ac130003
          created_at: '5/18/2021, 5:14:48 PM'
          lat: -4.881696978000001
          lon: 38.37997515399998
          species: Markhamia lutea
          planter_id: 5
          value:
            id: 933042
            photo_url: 'https://treetracker-production-images.s3.eu-central-1.amazonaws.com/2021.05.19.09.49.19_-4.881696978000001_38.37997515399998_47fc629b-27e9-4b58-b31a-3a35e5bbc3f0_IMG_20210518_121452_1024002290.jpg'
            verified: true
            token_id: d4bb294b-8c75-4e0f-af43-1cd9a35e1033
            impact_manager_id: 8599f832-145e-11ec-82a8-0242ac130003
            impact_producer_id: a0b6b70e-145e-11ec-82a8-0242ac130003
            created_at: '5/18/2021, 5:14:48 PM'
            lat: -4.881696978000001
            lon: 38.37997515399998
            species: Markhamia lutea
            planter_id: 5
            organization_id: 1
      title: ''
      properties:
        id:
          type: number
        photo_url:
          type: string
        verified:
          type: boolean
        token_id:
          type: string
        created_at:
          type: string
        lat:
          type: number
        lon:
          type: number
        species_id:
          type: number
        planter_id:
          type: number
        gps_accuracy:
          type: number
        capture_id:
          type: string
          description: 'In the public.trees table, it''s the uuid column'
        capture_approval_tag:
          type: string
        domain_specific_data:
          type: object
        morphology:
          type: string
        rejection_reason:
          type: string
        age:
          type: string
      required:
        - id
        - photo_url
        - verified
        - token_id
        - created_at
        - lat
        - lon
        - species_id
        - planter_id
    country:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 1
      properties:
        id:
          type: number
        name:
          type: string
          description: the name of the country
        centroid:
          type: string
          description: like POINT (-13.215865333333333 8.34645033333333)
      required:
        - id
    planter:
      description: ''
      type: object
      x-examples:
        example-planter:
          id: 5
          photo_url: 'https://treetracker-production-images.s3.eu-central-1.amazonaws.com/2021.05.11.18.37.00_-4.91963284_38.52757506_adc35f9c-b76e-4798-b587-70f5fba06b89_IMG_20210511_101502_-1595081185.jpg'
          name: Issa H
          tree_planted: 981
          tree_reject_rate: 0.01
          about: 'Greenway is a Youth-Driven Environmental Protection Organization providing alternative solutions to single-use plastic and planting carbon-sucking trees for socio-economic development and reducing climate crisis. Our social work includes reforestation, landscape restoration, climate education, awareness campaign, conducting research, outreach activities, and collaborating with key stakeholders to implement sustainable solutions.'
          mission: 'To combat climate change, desertification, land degradation, carbon emission by inspiring healthier communities affected by severe climate disorder and modestly reducing pollution by 2050.'
      properties:
        id:
          type: number
        photo_url:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        tree_planted:
          type: number
        tree_reject_rate:
          type: number
        about:
          type: string
        location:
          type: string
      required:
        - id
        - photo_url
        - name
    organization:
      description: ''
      type: object
      x-examples:
        example-org:
          id: 1
          name: 180Earth
          photo_url: 'https://180.earth/wp-content/uploads/2020/01/Asset-1.png'
          location: 'Shirimatunda, Tanzania'
          created_at: 'November 11, 2019'
          about: 'Greenway is a Youth-Driven Environmental Protection Organization providing alternative solutions to single-use plastic and planting carbon-sucking trees for socio-economic development and reducing climate crisis. Our social work includes reforestation, landscape restoration, climate education, awareness campaign, conducting research, outreach activities, and collaborating with key stakeholders to implement sustainable solutions.'
          mission: 'To combat climate change, desertification, land degradation, carbon emission by inspiring healthier communities affected by severe climate disorder and modestly reducing pollution by 2050.'
          value:
            id: 1
            name: 180Earth
            photo_url: 'https://180.earth/wp-content/uploads/2020/01/Asset-1.png'
            location: 'Shirimatunda, Tanzania'
            created_at: 'November 11, 2019'
            about: 'Greenway is a Youth-Driven Environmental Protection Organization providing alternative solutions to single-use plastic and planting carbon-sucking trees for socio-economic development and reducing climate crisis. Our social work includes reforestation, landscape restoration, climate education, awareness campaign, conducting research, outreach activities, and collaborating with key stakeholders to implement sustainable solutions.'
            mission: 'To combat climate change, desertification, land degradation, carbon emission by inspiring healthier communities affected by severe climate disorder and modestly reducing pollution by 2050.'
      properties:
        id:
          type: number
        name:
          type: string
          minLength: 1
        photo_url:
          type: string
          minLength: 1
        location:
          type: string
          minLength: 1
        created_at:
          type: string
          minLength: 1
        about:
          type: string
          minLength: 1
        mission:
          type: string
          minLength: 1
      required:
        - id
        - name
        - photo_url
        - location
        - created_at
        - about
        - mission
  examples:
    tree933042:
      value:
        id: 933042
        photo_url: 'https://treetracker-production-images.s3.eu-central-1.amazonaws.com/2021.05.19.09.49.19_-4.881696978000001_38.37997515399998_47fc629b-27e9-4b58-b31a-3a35e5bbc3f0_IMG_20210518_121452_1024002290.jpg'
        verified: true
        token_id: d4bb294b-8c75-4e0f-af43-1cd9a35e1033
        impact_manager_id: 8599f832-145e-11ec-82a8-0242ac130003
        impact_producer_id: a0b6b70e-145e-11ec-82a8-0242ac130003
        created_at: '5/18/2021, 5:14:48 PM'
        lat: -4.881696978000001
        lon: 38.37997515399998
        species: Markhamia lutea
        planter_id: 5
    tree932946:
      value:
        id: 932946
        photo_url: 'https://treetracker-production-images.s3.eu-central-1.amazonaws.com/2021.05.11.18.37.00_-4.91963284_38.52757506_adc35f9c-b76e-4798-b587-70f5fba06b89_IMG_20210511_101502_-1595081185.jpg'
        verified: true
        token_id: c488301f-1117-48c3-8866-3c38f28d3f25
        created_at: '5/17/2021, 9:31:17 PM'
        lat: -4.882294219999999
        lon: 38.380733454
        species: eucalyptus
        planter_id: 5
        organization_id: 1
    planter5:
      value:
        id: 5
        photo_url: 'https://treetracker-production-images.s3.eu-central-1.amazonaws.com/2021.05.11.18.37.00_-4.91963284_38.52757506_adc35f9c-b76e-4798-b587-70f5fba06b89_IMG_20210511_101502_-1595081185.jpg'
        name: Issa H
    org1:
      value:
        id: 1
        name: 180Earth
        photo_url: 'https://180.earth/wp-content/uploads/2020/01/Asset-1.png'
        area: Shirimatunda
        country: Tanzania
        created_at: 'November 11, 2019'
        about: 'Greenway is a Youth-Driven Environmental Protection Organization providing alternative solutions to single-use plastic and planting carbon-sucking trees for socio-economic development and reducing climate crisis. Our social work includes reforestation, landscape restoration, climate education, awareness campaign, conducting research, outreach activities, and collaborating with key stakeholders to implement sustainable solutions.'
        mission: 'To combat climate change, desertification, land degradation, carbon emission by inspiring healthier communities affected by severe climate disorder and modestly reducing pollution by 2050.'
