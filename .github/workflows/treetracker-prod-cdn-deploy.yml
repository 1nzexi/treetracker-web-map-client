name: Deploy to Prod Env

on:
  workflow_dispatch:
    inputs:
      git-tag:
        description: 'Branch/hash/tag'
        required: true

env:
  project-directory: ./

jobs:
  frontend:
    name: Build Frontend Project
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'skip-ci')
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.git-tag }}
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: git configure
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf ssh://git@github.com

      # only install dependencies
      # https://github.com/cypress-io/github-action
      - name: Install ðŸ“¦
        uses: cypress-io/github-action@v2
        with:
          runTests: false
          working-directory: ${{ env.project-directory }}

      # - name: run ESLint
      #   run: npm run lint
      #   working-directory: ${{ env.project-directory }}
      # define the endpoints for PROD in github secrets
      - name: build frontend project
        run: ${{ secrets.PROD_APP_ENDPOINTS }} CI= npm run build
        working-directory:
          ${{ env.project-directory }}
          # Install cached NPM dependencies, run end to end tests

      - name: Cypress E2E Tests ðŸ§ª
        uses: cypress-io/github-action@v2
        with:
          install: false
          # run these before testing
          start: npm run start
          # wait for server to be ready
          wait-on: 'http://localhost:3000'

      - name: Save screenshots
        # step runs even if other steps fail
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Save videos
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos

      - uses: actions/upload-artifact@v2
        with:
          name: frontend-bundle
          path: build
    # - name: run React tests
    #   run: npm test
    #   working-directory: ${{ env.project-directory }}

  deploy:
    name: Deploy to PROD CDN
    runs-on: ubuntu-latest
    needs: frontend
    if: |
      github.repository == "Greenstand/${{ github.event.repository.name }}"
    steps:
      - uses: actions/checkout@v2
      - name: Download bundled frontend resources
        uses: actions/download-artifact@v2
        with:
          name: frontend-bundle
          path: build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET }}
          aws-region: us-east-1
      - name: Copy front end resources to s3 bucket
        run: |
          aws s3 sync build s3://${{ secrets.PROD_CDN_S3_BUCKET }} --delete
      - name: Invalidate cloudfront caches
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_CDN_DISTRIBUTION_ID }} --paths "/*"
